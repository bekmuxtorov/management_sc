# Generated by Django 4.2 on 2023-09-12 05:48

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('study_center', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
            ],
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='districts', to='account.region')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('type', models.CharField(choices=[('teacher', 'Teacher'), ('director', 'Director'), ('adminstrator', 'Adminstrator')], default='teacher', max_length=13, verbose_name='User type')),
                ('full_name', models.CharField(max_length=100, verbose_name='Full name')),
                ('phone_number', models.CharField(blank=True, max_length=20, unique=True, validators=[django.core.validators.RegexValidator(message='Invalid phone number. Please enter in the format +998901234567', regex='^\\+998\\d{9}$')], verbose_name='Phone number')),
                ('passport_or_id', models.CharField(choices=[('passport', 'Passport'), ('document_id', 'ID')], default='passport', max_length=11)),
                ('password_or_id_number', models.CharField(blank=True, max_length=15, verbose_name='Password or ID number')),
                ('salary_percentage', models.FloatField(blank=True, null=True, verbose_name='Salary percentage')),
                ('sms_code', models.IntegerField(blank=True, null=True, verbose_name='SMS code')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date of creation')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Update profile')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('study_center', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users', to='study_center.studycenter', verbose_name='Study Center')),
                ('subjects', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users', to='study_center.subject')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
